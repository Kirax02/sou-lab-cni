---
- name: installing podman
  package:
    name: "podman"
    state: present
  tags:
    - soufe1
    - soufe2

- name: create a directory for soufe1
  file:
    path: "/etc/haproxy"
    state: directory
  tags:
    - soufe1

- name: generate configuration file
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  tags:
    - soufe1

- name: pull image for haproxy
  podman_image:
    name: docker.io/library/haproxy
  tags:
    - soufe1

- name: create haproxy container
  containers.podman.podman_container:
    name: haproxy
    image: haproxy
    state: started
    user: root
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/haproxy:/usr/local/etc/haproxy:Z"
  tags:
    - soufe1

- name: create a directory for soube2
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/prometheus
    - /var/lib/prometheus
    - /etc/grafana
    - /var/lib/grafana
  tags:
    - soufe2

- name: generate configuration file for prometheus
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
  tags:
    - soufe2

- name: pull prometheus image
  podman_image:
    name: docker.io/prom/prometheus
  tags:
    - soufe2

- name: create prometheus container
  containers.podman.podman_container:
    name: prometheus
    image: prom/prometheus
    state: started
    ports:
      - "9090:9090"
    volumes: 
      - "/etc/prometheus:/etc/prometheus:Z"
      - "/var/lib/prometheus"
  tags:
    - soufe2

- name: generate configuration file for grafana
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
  tags:
    - soufe2

- name: pull grafana image
  podman_image:
    name: docker.io/grafana/grafana
  tags:
    - soufe2

- name: create grafana container
  containers.podman.podman_container:
    name: grafana
    image: grafana/grafana
    state: started
    ports: 
      - "3000:3000"
    volumes:
      - "/etc/grafana:/etc/grafana:Z"
      - "/var/lib/grafana"
  tags:
    - soufe2
